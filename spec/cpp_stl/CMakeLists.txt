cmake_minimum_required(VERSION 2.6)

project(KS_TEST_CPP_STL)

set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

find_package(Boost COMPONENTS unit_test_framework REQUIRED)
find_package(ZLIB REQUIRED)
find_package(Iconv REQUIRED)

# Enforce UTF-8 source files encoding for MSVC
add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/utf-8>")

set(KS_PATH ../../compiled/cpp_stl)
set(RUNTIME_SRC_PATH ../../../runtime/cpp_stl)
set(PREREQ_PATH prereq)

set(SPEC_SOURCES
	main.cpp
	test_hello_world.cpp
	test_fixed_struct.cpp
	test_fixed_contents.cpp
	test_instance_std.cpp
	test_repeat_eos_u4.cpp
	test_if_struct.cpp
	test_if_values.cpp
	test_if_instances.cpp
	test_position_abs.cpp
	test_position_in_seq.cpp
	test_repeat_n_strz.cpp
	test_repeat_n_strz_double.cpp
	test_term_strz.cpp
	test_enum_0.cpp
	test_enum_1.cpp
	test_enum_if.cpp
	test_enum_for_unknown_id.cpp
	test_enum_of_value_inst.cpp
	test_enum_to_i.cpp
	test_enum_negative.cpp
	test_enum_fancy.cpp
	test_expr_0.cpp
	test_expr_1.cpp
	test_expr_2.cpp
	test_expr_3.cpp
	test_expr_array.cpp
	test_expr_bytes_cmp.cpp
	test_expr_mod.cpp
	test_expr_enum.cpp
	test_expr_io_eof.cpp
	test_expr_io_pos.cpp
	test_process_xor_const.cpp
	test_process_xor_value.cpp
	test_process_xor4_const.cpp
	test_process_xor4_value.cpp
	test_process_rotate.cpp
	test_process_coerce_bytes.cpp
	test_process_coerce_usertype1.cpp
	test_process_coerce_usertype2.cpp
	test_process_custom.cpp
	test_repeat_n_struct.cpp
	test_repeat_eos_struct.cpp
	test_floating_points.cpp
	test_float_to_i.cpp
	test_position_to_end.cpp
	test_str_eos.cpp
	test_type_int_unary_op.cpp
	test_type_ternary.cpp
	test_type_ternary_opaque.cpp
	test_process_to_user.cpp
	test_repeat_until_s4.cpp
	test_default_big_endian.cpp
	test_default_endian_mod.cpp
	test_default_endian_expr_exception.cpp
	test_default_endian_expr_inherited.cpp
	test_default_endian_expr_is_be.cpp
	test_default_endian_expr_is_le.cpp
	test_repeat_until_complex.cpp
	test_instance_std_array.cpp
	test_instance_user_array.cpp
	test_instance_io_user.cpp
	test_buffered_struct.cpp
	test_eof_exception_bytes.cpp
	test_eof_exception_u4.cpp
	test_nested_types.cpp
	test_nested_types2.cpp
	test_nested_same_name.cpp
	test_nested_same_name2.cpp
	test_switch_manual_enum.cpp
	test_switch_manual_int.cpp
	test_switch_manual_int_else.cpp
	test_switch_manual_int_size.cpp
	test_switch_manual_int_size_else.cpp
	test_switch_manual_int_size_eos.cpp
	test_switch_manual_str.cpp
	test_switch_manual_str_else.cpp
	test_switch_integers.cpp
	test_switch_integers2.cpp
	test_switch_multi_bool_ops.cpp
	test_switch_bytearray.cpp
	test_switch_repeat_expr.cpp
	test_nav_root.cpp
	test_nav_parent.cpp
	test_nav_parent2.cpp
	test_nav_parent3.cpp
	test_nav_parent_switch.cpp
	test_multiple_use.cpp
	test_str_encodings.cpp
	test_str_encodings_default.cpp
	test_zlib_with_header_78.cpp
	test_opaque_external_type.cpp
	test_optional_id.cpp
	test_opaque_external_type_02_parent.cpp
	test_non_standard.cpp
	test_debug_0.cpp
	test_debug_enum_name.cpp
	test_bits_simple.cpp
	test_bits_byte_aligned.cpp
	test_bits_enum.cpp
	test_bcd_user_type_be.cpp
	test_bcd_user_type_le.cpp
	test_docstrings.cpp
	test_docstrings_docref.cpp
	test_recursive_one.cpp
	test_str_pad_term.cpp
	test_str_pad_term_empty.cpp
	test_bytes_pad_term.cpp
	test_nav_parent_override.cpp
	test_nav_parent_false.cpp
	test_nav_parent_false2.cpp
	test_term_bytes.cpp
	test_switch_cast.cpp
	test_ts_packet_header.cpp
	test_repeat_until_sized.cpp
	test_nav_parent_vs_value_inst.cpp
	test_str_literals.cpp
	test_str_literals2.cpp
	test_imports0.cpp
	test_imports_circular_a.cpp
	test_imports_abs.cpp
	test_index_sizes.cpp
	test_meta_xref.cpp
	test_params_def.cpp
	test_params_call_short.cpp
	test_index_to_param_eos.cpp
	test_index_to_param_expr.cpp 
	test_index_to_param_until.cpp
	test_js_signed_right_shift.cpp
	test_opaque_with_param.cpp
	test_cast_to_top.cpp
	test_cast_to_imported.cpp
	test_user_type.cpp
	test_imports_abs_abs.cpp
	test_imports_abs_rel.cpp
	test_imports_rel_1.cpp
	test_yaml_ints.cpp
	test_params_pass_usertype.cpp
	test_nested_types3.cpp
	test_cast_nested.cpp
)

set(PREREQ_SOURCES
	${PREREQ_PATH}/my_custom_fx.cpp
	${PREREQ_PATH}/custom_fx.cpp
)

set(KS_SOURCES
	${KS_PATH}/hello_world.cpp
	${KS_PATH}/fixed_struct.cpp
	${KS_PATH}/fixed_contents.cpp
	${KS_PATH}/instance_std.cpp
	${KS_PATH}/repeat_eos_u4.cpp
	${KS_PATH}/if_struct.cpp
	${KS_PATH}/if_values.cpp
	${KS_PATH}/if_instances.cpp
	${KS_PATH}/position_abs.cpp
	${KS_PATH}/position_in_seq.cpp
	${KS_PATH}/repeat_n_strz.cpp
	${KS_PATH}/repeat_n_strz_double.cpp
	${KS_PATH}/term_strz.cpp
	${KS_PATH}/enum_0.cpp
	${KS_PATH}/enum_1.cpp
	${KS_PATH}/enum_if.cpp
	${KS_PATH}/enum_for_unknown_id.cpp
	${KS_PATH}/enum_of_value_inst.cpp
	${KS_PATH}/enum_to_i.cpp
	${KS_PATH}/enum_negative.cpp
	${KS_PATH}/enum_fancy.cpp
	${KS_PATH}/expr_0.cpp
	${KS_PATH}/expr_1.cpp
	${KS_PATH}/expr_2.cpp
	${KS_PATH}/expr_3.cpp
	${KS_PATH}/expr_array.cpp
	${KS_PATH}/expr_bytes_cmp.cpp
	${KS_PATH}/expr_mod.cpp
	${KS_PATH}/expr_enum.cpp
	${KS_PATH}/expr_io_eof.cpp
	${KS_PATH}/expr_io_pos.cpp
	${KS_PATH}/process_xor_const.cpp
	${KS_PATH}/process_xor_value.cpp
	${KS_PATH}/process_xor4_const.cpp
	${KS_PATH}/process_xor4_value.cpp
	${KS_PATH}/process_rotate.cpp
	${KS_PATH}/process_coerce_bytes.cpp
	${KS_PATH}/process_coerce_usertype1.cpp
	${KS_PATH}/process_coerce_usertype2.cpp
	${KS_PATH}/process_custom.cpp
	${KS_PATH}/repeat_n_struct.cpp
	${KS_PATH}/repeat_eos_struct.cpp
	${KS_PATH}/floating_points.cpp
	${KS_PATH}/float_to_i.cpp
	${KS_PATH}/position_to_end.cpp
	${KS_PATH}/str_eos.cpp
	${KS_PATH}/type_int_unary_op.cpp
	${KS_PATH}/type_ternary.cpp
	${KS_PATH}/type_ternary_opaque.cpp
	${KS_PATH}/process_to_user.cpp
	${KS_PATH}/repeat_until_s4.cpp
	${KS_PATH}/default_big_endian.cpp
	${KS_PATH}/default_endian_mod.cpp
	${KS_PATH}/default_endian_expr_exception.cpp
	${KS_PATH}/default_endian_expr_inherited.cpp
	${KS_PATH}/default_endian_expr_is_be.cpp
	${KS_PATH}/default_endian_expr_is_le.cpp
	${KS_PATH}/repeat_until_complex.cpp
	${KS_PATH}/instance_std_array.cpp
	${KS_PATH}/instance_user_array.cpp
	${KS_PATH}/instance_io_user.cpp
	${KS_PATH}/buffered_struct.cpp
	${KS_PATH}/eof_exception_bytes.cpp
	${KS_PATH}/eof_exception_u4.cpp
	${KS_PATH}/nested_types.cpp
	${KS_PATH}/nested_types2.cpp
	${KS_PATH}/nested_same_name.cpp
	${KS_PATH}/nested_same_name2.cpp
	${KS_PATH}/switch_manual_enum.cpp
	${KS_PATH}/switch_manual_int.cpp
	${KS_PATH}/switch_manual_int_else.cpp
	${KS_PATH}/switch_manual_int_size.cpp
	${KS_PATH}/switch_manual_int_size_else.cpp
	${KS_PATH}/switch_manual_int_size_eos.cpp
	${KS_PATH}/switch_manual_str.cpp
	${KS_PATH}/switch_manual_str_else.cpp
	${KS_PATH}/switch_integers.cpp
	${KS_PATH}/switch_integers2.cpp
	${KS_PATH}/switch_multi_bool_ops.cpp
	${KS_PATH}/switch_bytearray.cpp
	${KS_PATH}/switch_repeat_expr.cpp
	${KS_PATH}/nav_root.cpp
	${KS_PATH}/nav_parent.cpp
	${KS_PATH}/nav_parent2.cpp
	${KS_PATH}/nav_parent3.cpp
	${KS_PATH}/nav_parent_switch.cpp
	${KS_PATH}/multiple_use.cpp
	${KS_PATH}/str_encodings.cpp
	${KS_PATH}/str_encodings_default.cpp
	${KS_PATH}/zlib_with_header_78.cpp
	${KS_PATH}/opaque_external_type.cpp
	${KS_PATH}/optional_id.cpp
	${KS_PATH}/opaque_external_type_02_parent.cpp
	${KS_PATH}/opaque_external_type_02_child.cpp
	${KS_PATH}/non_standard.cpp
	${KS_PATH}/debug_0.cpp
	${KS_PATH}/debug_enum_name.cpp
	${KS_PATH}/bits_simple.cpp
	${KS_PATH}/bits_byte_aligned.cpp
	${KS_PATH}/bits_enum.cpp
	${KS_PATH}/bcd_user_type_be.cpp
	${KS_PATH}/bcd_user_type_le.cpp
	${KS_PATH}/docstrings.cpp
	${KS_PATH}/docstrings_docref.cpp
	${KS_PATH}/recursive_one.cpp
	${KS_PATH}/str_pad_term.cpp
	${KS_PATH}/str_pad_term_empty.cpp
	${KS_PATH}/bytes_pad_term.cpp
	${KS_PATH}/nav_parent_override.cpp
	${KS_PATH}/nav_parent_false.cpp
	${KS_PATH}/nav_parent_false2.cpp
	${KS_PATH}/term_bytes.cpp
	${KS_PATH}/switch_cast.cpp
	${KS_PATH}/ts_packet_header.cpp
	${KS_PATH}/repeat_until_sized.cpp
	${KS_PATH}/nav_parent_vs_value_inst.cpp
	${KS_PATH}/str_literals.cpp
	${KS_PATH}/str_literals2.cpp
	${KS_PATH}/imports0.cpp
	${KS_PATH}/imports_circular_a.cpp
	${KS_PATH}/imports_circular_b.cpp
	${KS_PATH}/imports_abs.cpp
	${KS_PATH}/vlq_base128_le.cpp
	${KS_PATH}/index_sizes.cpp
	${KS_PATH}/meta_xref.cpp
	${KS_PATH}/params_def.cpp
	${KS_PATH}/params_call_short.cpp
	${KS_PATH}/index_to_param_eos.cpp
	${KS_PATH}/index_to_param_expr.cpp 
	${KS_PATH}/index_to_param_until.cpp
	${KS_PATH}/js_signed_right_shift.cpp
	${KS_PATH}/opaque_with_param.cpp
	${KS_PATH}/cast_to_top.cpp
	${KS_PATH}/cast_to_imported.cpp
	${KS_PATH}/user_type.cpp
	${KS_PATH}/imports_abs_abs.cpp
	${KS_PATH}/imports_abs_rel.cpp
	${KS_PATH}/imports_rel_1.cpp
	${KS_PATH}/yaml_ints.cpp
	${KS_PATH}/params_pass_usertype.cpp
	${KS_PATH}/nested_types3.cpp
	${KS_PATH}/cast_nested.cpp

	${KS_PATH}/imported_1.cpp
	${KS_PATH}/imported_2.cpp
	${KS_PATH}/imported_and_abs.cpp
	${KS_PATH}/imported_and_rel.cpp
	${KS_PATH}/imported_root.cpp
)

set(RUNTIME_SOURCES
	${RUNTIME_SRC_PATH}/kaitai/kaitaistream.cpp
)

add_executable (ks_tests
	${RUNTIME_SOURCES}
	${PREREQ_SOURCES}
	${KS_SOURCES}
	${SPEC_SOURCES}
)

include_directories(
	"${PROJECT_BINARY_DIR}"
	"${KS_PATH}"
	"${RUNTIME_SRC_PATH}"
	"${PREREQ_PATH}"
	"${ZLIB_INCLUDE_DIRS}"
)

# NB: no quotes around variables here, as it messes up new "optimized
# A debug B" syntax which gets generated on Windows platforms
target_link_libraries(ks_tests
	${Boost_UNIT_TEST_FRAMEWORK_LIBRARY}
	${ZLIB_LIBRARIES}
	${Iconv_LIBRARIES}
)

target_compile_definitions(ks_tests PRIVATE -DKS_ZLIB -DKS_STR_ENCODING_ICONV)

add_test(ks_tests ks_tests)

enable_testing()
